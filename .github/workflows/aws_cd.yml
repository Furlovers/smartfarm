name: AWS CD
on:
  push:
    branches:
      - main
jobs:
  DeployToAWS:
    environment: 
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
        - uses: actions/checkout@v2
        - name: Setup AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-region: ${{ vars.AWS_REGION }}
            role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubActionsRole
            role-session-name: github-action
        - name: Use Node.js 22.x
          uses: actions/setup-node@v3
          with:
            node-version: 22.x
        - name: Setting stage and stack name
          run: |
            echo "STAGE=${{ github.ref_name }}" 
            echo "STACK_NAME=SmartfarmStackFront${{github.ref_name}}" >> $GITHUB_ENV
        - name: Installing Dependencies
          run: |
            cd frontend
            npm install vite
            npm install -g aws-cdk
            npm install
            cd ../iac_frontend
            npm install
            cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ vars.AWS_REGION }}
        - name: Build and Export
          run: |
            cd frontend
            npx vite build
          env: 
            VITE_STAGE: ${{ github.ref_name }}
        - name: Setup envs
          run: |
            echo AWS_REGION=${{ vars.AWS_REGION }} >> $GITHUB_ENV
            echo AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }} >> $GITHUB_ENV
            echo STACK_NAME=${{ env.STACK_NAME }} >> $GITHUB_ENV
            echo GITHUB_REF_NAME=${{ github.ref_name }} >> $GITHUB_ENV
            echo SMARTFARM_ACM_CERTIFICATE_ARN=${{ secrets.SMARTFARM_ACM_CERTIFICATE_ARN }} >> $GITHUB_ENV
            echo SMARTFARM_HOSTED_ZONE_ID=${{ secrets.SMARTFARM_HOSTED_ZONE_ID }} >> $GITHUB_ENV  
        - name: Deploy with CDK
          run: |
            cd iac_frontend
            cdk synth
            cdk deploy --require-approval never 
        - name: Set CloudFront ID
          run: |
            CLOUD_FRONT_ID=$(aws cloudformation --region ${{vars.AWS_REGION}} describe-stacks --stack-name ${{env.STACK_NAME}} --query "Stacks[0].Outputs[?OutputKey=='SmartfarmFrontDistributionId${{github.ref_name}}'].OutputValue" --output text)
            echo "CLOUD_FRONT_ID='$CLOUD_FRONT_ID'" >> $GITHUB_ENV
        - name: Set AWS Bucket
          run: |
            AWS_BUCKET=$(aws cloudformation --region ${{vars.AWS_REGION}} describe-stacks --stack-name ${{env.STACK_NAME}} --query "Stacks[0].Outputs[?OutputKey=='SmartfarmFrontBucketName${{github.ref_name}}'].OutputValue" --output text)
            echo "AWS_BUCKET='$AWS_BUCKET'" >> $GITHUB_ENV
        - name: Upload to S3
          run: aws s3 cp frontend/dist s3://${{env.AWS_BUCKET}}/ --recursive --region ${{ vars.AWS_REGION }}
        - name: Clear CDN cache
          run: aws cloudfront create-invalidation --distribution-id ${{env.CLOUD_FRONT_ID}} --paths "/*" --region sa-east-1